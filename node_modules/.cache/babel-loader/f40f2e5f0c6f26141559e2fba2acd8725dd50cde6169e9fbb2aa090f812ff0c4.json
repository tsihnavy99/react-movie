{"ast":null,"code":"/** @license React vundefined\n * react-refresh-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function () {\n    'use strict';\n\n    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n    // nor polyfill, then a plain number is used for performance.\n    var hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\n    // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n    // (unstable) APIs that have been removed. Can we remove the symbols?\n\n    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\n    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\n    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map; // We never remove these associations.\n    // It's OK to reference families, but use WeakMap/Set for types.\n\n    var allFamiliesByID = new Map();\n    var allFamiliesByType = new PossiblyWeakMap();\n    var allSignaturesByType = new PossiblyWeakMap(); // This WeakMap is read by React, so we only put families\n    // that have actually been edited here. This keeps checks fast.\n    // $FlowIssue\n\n    var updatedFamiliesByType = new PossiblyWeakMap(); // This is cleared on every performReactRefresh() call.\n    // It is an array of [Family, NextType] tuples.\n\n    var pendingUpdates = []; // This is injected by the renderer via DevTools global hook.\n\n    var helpersByRendererID = new Map();\n    var helpersByRoot = new Map(); // We keep track of mounted roots so we can schedule updates.\n\n    var mountedRoots = new Set(); // If a root captures an error, we add its element to this Map so we can retry on edit.\n\n    var failedRoots = new Map();\n    var didSomeRootFailOnMount = false;\n    function computeFullKey(signature) {\n      if (signature.fullKey !== null) {\n        return signature.fullKey;\n      }\n      var fullKey = signature.ownKey;\n      var hooks;\n      try {\n        hooks = signature.getCustomHooks();\n      } catch (err) {\n        // This can happen in an edge case, e.g. if expression like Foo.useSomething\n        // depends on Foo which is lazily initialized during rendering.\n        // In that case just assume we'll have to remount.\n        signature.forceReset = true;\n        signature.fullKey = fullKey;\n        return fullKey;\n      }\n      for (var i = 0; i < hooks.length; i++) {\n        var hook = hooks[i];\n        if (typeof hook !== 'function') {\n          // Something's wrong. Assume we need to remount.\n          signature.forceReset = true;\n          signature.fullKey = fullKey;\n          return fullKey;\n        }\n        var nestedHookSignature = allSignaturesByType.get(hook);\n        if (nestedHookSignature === undefined) {\n          // No signature means Hook wasn't in the source code, e.g. in a library.\n          // We'll skip it because we can assume it won't change during this session.\n          continue;\n        }\n        var nestedHookKey = computeFullKey(nestedHookSignature);\n        if (nestedHookSignature.forceReset) {\n          signature.forceReset = true;\n        }\n        fullKey += '\\n---\\n' + nestedHookKey;\n      }\n      signature.fullKey = fullKey;\n      return fullKey;\n    }\n    function haveEqualSignatures(prevType, nextType) {\n      var prevSignature = allSignaturesByType.get(prevType);\n      var nextSignature = allSignaturesByType.get(nextType);\n      if (prevSignature === undefined && nextSignature === undefined) {\n        return true;\n      }\n      if (prevSignature === undefined || nextSignature === undefined) {\n        return false;\n      }\n      if (computeFullKey(prevSignature) !== computeFullKey(nextSignature)) {\n        return false;\n      }\n      if (nextSignature.forceReset) {\n        return false;\n      }\n      return true;\n    }\n    function isReactClass(type) {\n      return type.prototype && type.prototype.isReactComponent;\n    }\n    function canPreserveStateBetween(prevType, nextType) {\n      if (isReactClass(prevType) || isReactClass(nextType)) {\n        return false;\n      }\n      if (haveEqualSignatures(prevType, nextType)) {\n        return true;\n      }\n      return false;\n    }\n    function resolveFamily(type) {\n      // Only check updated types to keep lookups fast.\n      return updatedFamiliesByType.get(type);\n    }\n    function performReactRefresh() {\n      {\n        if (pendingUpdates.length === 0) {\n          return null;\n        }\n        var staleFamilies = new Set();\n        var updatedFamilies = new Set();\n        var updates = pendingUpdates;\n        pendingUpdates = [];\n        updates.forEach(function (_ref) {\n          var family = _ref[0],\n            nextType = _ref[1];\n          // Now that we got a real edit, we can create associations\n          // that will be read by the React reconciler.\n          var prevType = family.current;\n          updatedFamiliesByType.set(prevType, family);\n          updatedFamiliesByType.set(nextType, family);\n          family.current = nextType; // Determine whether this should be a re-render or a re-mount.\n\n          if (canPreserveStateBetween(prevType, nextType)) {\n            updatedFamilies.add(family);\n          } else {\n            staleFamilies.add(family);\n          }\n        }); // TODO: rename these fields to something more meaningful.\n\n        var update = {\n          updatedFamilies: updatedFamilies,\n          // Families that will re-render preserving state\n          staleFamilies: staleFamilies // Families that will be remounted\n        };\n\n        helpersByRendererID.forEach(function (helpers) {\n          // Even if there are no roots, set the handler on first update.\n          // This ensures that if *new* roots are mounted, they'll use the resolve handler.\n          helpers.setRefreshHandler(resolveFamily);\n        });\n        var didError = false;\n        var firstError = null;\n        failedRoots.forEach(function (element, root) {\n          var helpers = helpersByRoot.get(root);\n          if (helpers === undefined) {\n            throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');\n          }\n          try {\n            helpers.scheduleRoot(root, element);\n          } catch (err) {\n            if (!didError) {\n              didError = true;\n              firstError = err;\n            } // Keep trying other roots.\n          }\n        });\n\n        mountedRoots.forEach(function (root) {\n          var helpers = helpersByRoot.get(root);\n          if (helpers === undefined) {\n            throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');\n          }\n          try {\n            helpers.scheduleRefresh(root, update);\n          } catch (err) {\n            if (!didError) {\n              didError = true;\n              firstError = err;\n            } // Keep trying other roots.\n          }\n        });\n\n        if (didError) {\n          throw firstError;\n        }\n        return update;\n      }\n    }\n    function register(type, id) {\n      {\n        if (type === null) {\n          return;\n        }\n        if (typeof type !== 'function' && typeof type !== 'object') {\n          return;\n        } // This can happen in an edge case, e.g. if we register\n        // return value of a HOC but it returns a cached component.\n        // Ignore anything but the first registration for each type.\n\n        if (allFamiliesByType.has(type)) {\n          return;\n        } // Create family or remember to update it.\n        // None of this bookkeeping affects reconciliation\n        // until the first performReactRefresh() call above.\n\n        var family = allFamiliesByID.get(id);\n        if (family === undefined) {\n          family = {\n            current: type\n          };\n          allFamiliesByID.set(id, family);\n        } else {\n          pendingUpdates.push([family, type]);\n        }\n        allFamiliesByType.set(type, family); // Visit inner types because we might not have registered them.\n\n        if (typeof type === 'object' && type !== null) {\n          switch (type.$$typeof) {\n            case REACT_FORWARD_REF_TYPE:\n              register(type.render, id + '$render');\n              break;\n            case REACT_MEMO_TYPE:\n              register(type.type, id + '$type');\n              break;\n          }\n        }\n      }\n    }\n    function setSignature(type, key) {\n      var forceReset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var getCustomHooks = arguments.length > 3 ? arguments[3] : undefined;\n      {\n        allSignaturesByType.set(type, {\n          forceReset: forceReset,\n          ownKey: key,\n          fullKey: null,\n          getCustomHooks: getCustomHooks || function () {\n            return [];\n          }\n        });\n      }\n    } // This is lazily called during first render for a type.\n    // It captures Hook list at that time so inline requires don't break comparisons.\n\n    function collectCustomHooksForSignature(type) {\n      {\n        var signature = allSignaturesByType.get(type);\n        if (signature !== undefined) {\n          computeFullKey(signature);\n        }\n      }\n    }\n    function getFamilyByID(id) {\n      {\n        return allFamiliesByID.get(id);\n      }\n    }\n    function getFamilyByType(type) {\n      {\n        return allFamiliesByType.get(type);\n      }\n    }\n    function findAffectedHostInstances(families) {\n      {\n        var affectedInstances = new Set();\n        mountedRoots.forEach(function (root) {\n          var helpers = helpersByRoot.get(root);\n          if (helpers === undefined) {\n            throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');\n          }\n          var instancesForRoot = helpers.findHostInstancesForRefresh(root, families);\n          instancesForRoot.forEach(function (inst) {\n            affectedInstances.add(inst);\n          });\n        });\n        return affectedInstances;\n      }\n    }\n    function injectIntoGlobalHook(globalObject) {\n      {\n        // For React Native, the global hook will be set up by require('react-devtools-core').\n        // That code will run before us. So we need to monkeypatch functions on existing hook.\n        // For React Web, the global hook will be set up by the extension.\n        // This will also run before us.\n        var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;\n        if (hook === undefined) {\n          // However, if there is no DevTools extension, we'll need to set up the global hook ourselves.\n          // Note that in this case it's important that renderer code runs *after* this method call.\n          // Otherwise, the renderer will think that there is no global hook, and won't do the injection.\n          var nextID = 0;\n          globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {\n            supportsFiber: true,\n            inject: function (injected) {\n              return nextID++;\n            },\n            onCommitFiberRoot: function (id, root, maybePriorityLevel, didError) {},\n            onCommitFiberUnmount: function () {}\n          };\n        } // Here, we just want to get a reference to scheduleRefresh.\n\n        var oldInject = hook.inject;\n        hook.inject = function (injected) {\n          var id = oldInject.apply(this, arguments);\n          if (typeof injected.scheduleRefresh === 'function' && typeof injected.setRefreshHandler === 'function') {\n            // This version supports React Refresh.\n            helpersByRendererID.set(id, injected);\n          }\n          return id;\n        }; // We also want to track currently mounted roots.\n\n        var oldOnCommitFiberRoot = hook.onCommitFiberRoot;\n        hook.onCommitFiberRoot = function (id, root, maybePriorityLevel, didError) {\n          var helpers = helpersByRendererID.get(id);\n          if (helpers === undefined) {\n            return;\n          }\n          helpersByRoot.set(root, helpers);\n          var current = root.current;\n          var alternate = current.alternate; // We need to determine whether this root has just (un)mounted.\n          // This logic is copy-pasted from similar logic in the DevTools backend.\n          // If this breaks with some refactoring, you'll want to update DevTools too.\n\n          if (alternate !== null) {\n            var wasMounted = alternate.memoizedState != null && alternate.memoizedState.element != null;\n            var isMounted = current.memoizedState != null && current.memoizedState.element != null;\n            if (!wasMounted && isMounted) {\n              // Mount a new root.\n              mountedRoots.add(root);\n              failedRoots.delete(root);\n            } else if (wasMounted && isMounted) {// Update an existing root.\n              // This doesn't affect our mounted root Set.\n            } else if (wasMounted && !isMounted) {\n              // Unmount an existing root.\n              mountedRoots.delete(root);\n              if (didError) {\n                // We'll remount it on future edits.\n                // Remember what was rendered so we can restore it.\n                failedRoots.set(root, alternate.memoizedState.element);\n              } else {\n                helpersByRoot.delete(root);\n              }\n            } else if (!wasMounted && !isMounted) {\n              if (didError && !failedRoots.has(root)) {\n                // The root had an error during the initial mount.\n                // We can't read its last element from the memoized state\n                // because there was no previously committed alternate.\n                // Ideally, it would be nice if we had a way to extract\n                // the last attempted rendered element, but accessing the update queue\n                // would tie this package too closely to the reconciler version.\n                // So instead, we just set a flag.\n                // TODO: Maybe we could fix this as the same time as when we fix\n                // DevTools to not depend on `alternate.memoizedState.element`.\n                didSomeRootFailOnMount = true;\n              }\n            }\n          } else {\n            // Mount a new root.\n            mountedRoots.add(root);\n          }\n          return oldOnCommitFiberRoot.apply(this, arguments);\n        };\n      }\n    }\n    function hasUnrecoverableErrors() {\n      return didSomeRootFailOnMount;\n    } // Exposed for testing.\n\n    function _getMountedRootCount() {\n      {\n        return mountedRoots.size;\n      }\n    } // This is a wrapper over more primitive functions for setting signature.\n    // Signatures let us decide whether the Hook order has changed on refresh.\n    //\n    // This function is intended to be used as a transform target, e.g.:\n    // var _s = createSignatureFunctionForTransform()\n    //\n    // function Hello() {\n    //   const [foo, setFoo] = useState(0);\n    //   const value = useCustomHook();\n    //   _s(); /* Second call triggers collecting the custom Hook list.\n    //          * This doesn't happen during the module evaluation because we\n    //          * don't want to change the module order with inline requires.\n    //          * Next calls are noops. */\n    //   return <h1>Hi</h1>;\n    // }\n    //\n    // /* First call specifies the signature: */\n    // _s(\n    //   Hello,\n    //   'useState{[foo, setFoo]}(0)',\n    //   () => [useCustomHook], /* Lazy to avoid triggering inline requires */\n    // );\n\n    function createSignatureFunctionForTransform() {\n      {\n        // We'll fill in the signature in two steps.\n        // First, we'll know the signature itself. This happens outside the component.\n        // Then, we'll know the references to custom Hooks. This happens inside the component.\n        // After that, the returned function will be a fast path no-op.\n        var status = 'needsSignature';\n        var savedType;\n        var hasCustomHooks;\n        return function (type, key, forceReset, getCustomHooks) {\n          switch (status) {\n            case 'needsSignature':\n              if (type !== undefined) {\n                // If we received an argument, this is the initial registration call.\n                savedType = type;\n                hasCustomHooks = typeof getCustomHooks === 'function';\n                setSignature(type, key, forceReset, getCustomHooks); // The next call we expect is from inside a function, to fill in the custom Hooks.\n\n                status = 'needsCustomHooks';\n              }\n              break;\n            case 'needsCustomHooks':\n              if (hasCustomHooks) {\n                collectCustomHooksForSignature(savedType);\n              }\n              status = 'resolved';\n              break;\n            case 'resolved':\n              // Do nothing. Fast path for all future renders.\n              break;\n          }\n          return type;\n        };\n      }\n    }\n    function isLikelyComponentType(type) {\n      {\n        switch (typeof type) {\n          case 'function':\n            {\n              // First, deal with classes.\n              if (type.prototype != null) {\n                if (type.prototype.isReactComponent) {\n                  // React class.\n                  return true;\n                }\n                var ownNames = Object.getOwnPropertyNames(type.prototype);\n                if (ownNames.length > 1 || ownNames[0] !== 'constructor') {\n                  // This looks like a class.\n                  return false;\n                } // eslint-disable-next-line no-proto\n\n                if (type.prototype.__proto__ !== Object.prototype) {\n                  // It has a superclass.\n                  return false;\n                } // Pass through.\n                // This looks like a regular function with empty prototype.\n              } // For plain functions and arrows, use name as a heuristic.\n\n              var name = type.name || type.displayName;\n              return typeof name === 'string' && /^[A-Z]/.test(name);\n            }\n          case 'object':\n            {\n              if (type != null) {\n                switch (type.$$typeof) {\n                  case REACT_FORWARD_REF_TYPE:\n                  case REACT_MEMO_TYPE:\n                    // Definitely React components.\n                    return true;\n                  default:\n                    return false;\n                }\n              }\n              return false;\n            }\n          default:\n            {\n              return false;\n            }\n        }\n      }\n    }\n    var ReactFreshRuntime = Object.freeze({\n      performReactRefresh: performReactRefresh,\n      register: register,\n      setSignature: setSignature,\n      collectCustomHooksForSignature: collectCustomHooksForSignature,\n      getFamilyByID: getFamilyByID,\n      getFamilyByType: getFamilyByType,\n      findAffectedHostInstances: findAffectedHostInstances,\n      injectIntoGlobalHook: injectIntoGlobalHook,\n      hasUnrecoverableErrors: hasUnrecoverableErrors,\n      _getMountedRootCount: _getMountedRootCount,\n      createSignatureFunctionForTransform: createSignatureFunctionForTransform,\n      isLikelyComponentType: isLikelyComponentType\n    });\n\n    // This is hacky but makes it work with both Rollup and Jest.\n\n    var runtime = ReactFreshRuntime.default || ReactFreshRuntime;\n    module.exports = runtime;\n  })();\n}","map":{"version":3,"names":["process","env","NODE_ENV","hasSymbol","Symbol","for","REACT_FORWARD_REF_TYPE","REACT_MEMO_TYPE","PossiblyWeakMap","WeakMap","Map","allFamiliesByID","allFamiliesByType","allSignaturesByType","updatedFamiliesByType","pendingUpdates","helpersByRendererID","helpersByRoot","mountedRoots","Set","failedRoots","didSomeRootFailOnMount","computeFullKey","signature","fullKey","ownKey","hooks","getCustomHooks","err","forceReset","i","length","hook","nestedHookSignature","get","undefined","nestedHookKey","haveEqualSignatures","prevType","nextType","prevSignature","nextSignature","isReactClass","type","prototype","isReactComponent","canPreserveStateBetween","resolveFamily","performReactRefresh","staleFamilies","updatedFamilies","updates","forEach","_ref","family","current","set","add","update","helpers","setRefreshHandler","didError","firstError","element","root","Error","scheduleRoot","scheduleRefresh","register","id","has","push","$$typeof","render","setSignature","key","arguments","collectCustomHooksForSignature","getFamilyByID","getFamilyByType","findAffectedHostInstances","families","affectedInstances","instancesForRoot","findHostInstancesForRefresh","inst","injectIntoGlobalHook","globalObject","__REACT_DEVTOOLS_GLOBAL_HOOK__","nextID","supportsFiber","inject","injected","onCommitFiberRoot","maybePriorityLevel","onCommitFiberUnmount","oldInject","apply","oldOnCommitFiberRoot","alternate","wasMounted","memoizedState","isMounted","delete","hasUnrecoverableErrors","_getMountedRootCount","size","createSignatureFunctionForTransform","status","savedType","hasCustomHooks","isLikelyComponentType","ownNames","Object","getOwnPropertyNames","__proto__","name","displayName","test","ReactFreshRuntime","freeze","runtime","default","module","exports"],"sources":["C:/Users/user/node_modules/react-refresh/cjs/react-refresh-runtime.development.js"],"sourcesContent":["/** @license React vundefined\n * react-refresh-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\n\n\n\n\n\n // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\n\n\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\n\n\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\n\nvar PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map; // We never remove these associations.\n// It's OK to reference families, but use WeakMap/Set for types.\n\nvar allFamiliesByID = new Map();\nvar allFamiliesByType = new PossiblyWeakMap();\nvar allSignaturesByType = new PossiblyWeakMap(); // This WeakMap is read by React, so we only put families\n// that have actually been edited here. This keeps checks fast.\n// $FlowIssue\n\nvar updatedFamiliesByType = new PossiblyWeakMap(); // This is cleared on every performReactRefresh() call.\n// It is an array of [Family, NextType] tuples.\n\nvar pendingUpdates = []; // This is injected by the renderer via DevTools global hook.\n\nvar helpersByRendererID = new Map();\nvar helpersByRoot = new Map(); // We keep track of mounted roots so we can schedule updates.\n\nvar mountedRoots = new Set(); // If a root captures an error, we add its element to this Map so we can retry on edit.\n\nvar failedRoots = new Map();\nvar didSomeRootFailOnMount = false;\n\nfunction computeFullKey(signature) {\n  if (signature.fullKey !== null) {\n    return signature.fullKey;\n  }\n\n  var fullKey = signature.ownKey;\n  var hooks;\n\n  try {\n    hooks = signature.getCustomHooks();\n  } catch (err) {\n    // This can happen in an edge case, e.g. if expression like Foo.useSomething\n    // depends on Foo which is lazily initialized during rendering.\n    // In that case just assume we'll have to remount.\n    signature.forceReset = true;\n    signature.fullKey = fullKey;\n    return fullKey;\n  }\n\n  for (var i = 0; i < hooks.length; i++) {\n    var hook = hooks[i];\n\n    if (typeof hook !== 'function') {\n      // Something's wrong. Assume we need to remount.\n      signature.forceReset = true;\n      signature.fullKey = fullKey;\n      return fullKey;\n    }\n\n    var nestedHookSignature = allSignaturesByType.get(hook);\n\n    if (nestedHookSignature === undefined) {\n      // No signature means Hook wasn't in the source code, e.g. in a library.\n      // We'll skip it because we can assume it won't change during this session.\n      continue;\n    }\n\n    var nestedHookKey = computeFullKey(nestedHookSignature);\n\n    if (nestedHookSignature.forceReset) {\n      signature.forceReset = true;\n    }\n\n    fullKey += '\\n---\\n' + nestedHookKey;\n  }\n\n  signature.fullKey = fullKey;\n  return fullKey;\n}\n\nfunction haveEqualSignatures(prevType, nextType) {\n  var prevSignature = allSignaturesByType.get(prevType);\n  var nextSignature = allSignaturesByType.get(nextType);\n\n  if (prevSignature === undefined && nextSignature === undefined) {\n    return true;\n  }\n\n  if (prevSignature === undefined || nextSignature === undefined) {\n    return false;\n  }\n\n  if (computeFullKey(prevSignature) !== computeFullKey(nextSignature)) {\n    return false;\n  }\n\n  if (nextSignature.forceReset) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isReactClass(type) {\n  return type.prototype && type.prototype.isReactComponent;\n}\n\nfunction canPreserveStateBetween(prevType, nextType) {\n  if (isReactClass(prevType) || isReactClass(nextType)) {\n    return false;\n  }\n\n  if (haveEqualSignatures(prevType, nextType)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction resolveFamily(type) {\n  // Only check updated types to keep lookups fast.\n  return updatedFamiliesByType.get(type);\n}\n\nfunction performReactRefresh() {\n  {\n    if (pendingUpdates.length === 0) {\n      return null;\n    }\n\n    var staleFamilies = new Set();\n    var updatedFamilies = new Set();\n    var updates = pendingUpdates;\n    pendingUpdates = [];\n    updates.forEach(function (_ref) {\n      var family = _ref[0],\n          nextType = _ref[1];\n      // Now that we got a real edit, we can create associations\n      // that will be read by the React reconciler.\n      var prevType = family.current;\n      updatedFamiliesByType.set(prevType, family);\n      updatedFamiliesByType.set(nextType, family);\n      family.current = nextType; // Determine whether this should be a re-render or a re-mount.\n\n      if (canPreserveStateBetween(prevType, nextType)) {\n        updatedFamilies.add(family);\n      } else {\n        staleFamilies.add(family);\n      }\n    }); // TODO: rename these fields to something more meaningful.\n\n    var update = {\n      updatedFamilies: updatedFamilies,\n      // Families that will re-render preserving state\n      staleFamilies: staleFamilies // Families that will be remounted\n\n    };\n    helpersByRendererID.forEach(function (helpers) {\n      // Even if there are no roots, set the handler on first update.\n      // This ensures that if *new* roots are mounted, they'll use the resolve handler.\n      helpers.setRefreshHandler(resolveFamily);\n    });\n    var didError = false;\n    var firstError = null;\n    failedRoots.forEach(function (element, root) {\n      var helpers = helpersByRoot.get(root);\n\n      if (helpers === undefined) {\n        throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');\n      }\n\n      try {\n        helpers.scheduleRoot(root, element);\n      } catch (err) {\n        if (!didError) {\n          didError = true;\n          firstError = err;\n        } // Keep trying other roots.\n\n      }\n    });\n    mountedRoots.forEach(function (root) {\n      var helpers = helpersByRoot.get(root);\n\n      if (helpers === undefined) {\n        throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');\n      }\n\n      try {\n        helpers.scheduleRefresh(root, update);\n      } catch (err) {\n        if (!didError) {\n          didError = true;\n          firstError = err;\n        } // Keep trying other roots.\n\n      }\n    });\n\n    if (didError) {\n      throw firstError;\n    }\n\n    return update;\n  }\n}\nfunction register(type, id) {\n  {\n    if (type === null) {\n      return;\n    }\n\n    if (typeof type !== 'function' && typeof type !== 'object') {\n      return;\n    } // This can happen in an edge case, e.g. if we register\n    // return value of a HOC but it returns a cached component.\n    // Ignore anything but the first registration for each type.\n\n\n    if (allFamiliesByType.has(type)) {\n      return;\n    } // Create family or remember to update it.\n    // None of this bookkeeping affects reconciliation\n    // until the first performReactRefresh() call above.\n\n\n    var family = allFamiliesByID.get(id);\n\n    if (family === undefined) {\n      family = {\n        current: type\n      };\n      allFamiliesByID.set(id, family);\n    } else {\n      pendingUpdates.push([family, type]);\n    }\n\n    allFamiliesByType.set(type, family); // Visit inner types because we might not have registered them.\n\n    if (typeof type === 'object' && type !== null) {\n      switch (type.$$typeof) {\n        case REACT_FORWARD_REF_TYPE:\n          register(type.render, id + '$render');\n          break;\n\n        case REACT_MEMO_TYPE:\n          register(type.type, id + '$type');\n          break;\n      }\n    }\n  }\n}\nfunction setSignature(type, key) {\n  var forceReset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var getCustomHooks = arguments.length > 3 ? arguments[3] : undefined;\n\n  {\n    allSignaturesByType.set(type, {\n      forceReset: forceReset,\n      ownKey: key,\n      fullKey: null,\n      getCustomHooks: getCustomHooks || function () {\n        return [];\n      }\n    });\n  }\n} // This is lazily called during first render for a type.\n// It captures Hook list at that time so inline requires don't break comparisons.\n\nfunction collectCustomHooksForSignature(type) {\n  {\n    var signature = allSignaturesByType.get(type);\n\n    if (signature !== undefined) {\n      computeFullKey(signature);\n    }\n  }\n}\nfunction getFamilyByID(id) {\n  {\n    return allFamiliesByID.get(id);\n  }\n}\nfunction getFamilyByType(type) {\n  {\n    return allFamiliesByType.get(type);\n  }\n}\nfunction findAffectedHostInstances(families) {\n  {\n    var affectedInstances = new Set();\n    mountedRoots.forEach(function (root) {\n      var helpers = helpersByRoot.get(root);\n\n      if (helpers === undefined) {\n        throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');\n      }\n\n      var instancesForRoot = helpers.findHostInstancesForRefresh(root, families);\n      instancesForRoot.forEach(function (inst) {\n        affectedInstances.add(inst);\n      });\n    });\n    return affectedInstances;\n  }\n}\nfunction injectIntoGlobalHook(globalObject) {\n  {\n    // For React Native, the global hook will be set up by require('react-devtools-core').\n    // That code will run before us. So we need to monkeypatch functions on existing hook.\n    // For React Web, the global hook will be set up by the extension.\n    // This will also run before us.\n    var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n    if (hook === undefined) {\n      // However, if there is no DevTools extension, we'll need to set up the global hook ourselves.\n      // Note that in this case it's important that renderer code runs *after* this method call.\n      // Otherwise, the renderer will think that there is no global hook, and won't do the injection.\n      var nextID = 0;\n      globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {\n        supportsFiber: true,\n        inject: function (injected) {\n          return nextID++;\n        },\n        onCommitFiberRoot: function (id, root, maybePriorityLevel, didError) {},\n        onCommitFiberUnmount: function () {}\n      };\n    } // Here, we just want to get a reference to scheduleRefresh.\n\n\n    var oldInject = hook.inject;\n\n    hook.inject = function (injected) {\n      var id = oldInject.apply(this, arguments);\n\n      if (typeof injected.scheduleRefresh === 'function' && typeof injected.setRefreshHandler === 'function') {\n        // This version supports React Refresh.\n        helpersByRendererID.set(id, injected);\n      }\n\n      return id;\n    }; // We also want to track currently mounted roots.\n\n\n    var oldOnCommitFiberRoot = hook.onCommitFiberRoot;\n\n    hook.onCommitFiberRoot = function (id, root, maybePriorityLevel, didError) {\n      var helpers = helpersByRendererID.get(id);\n\n      if (helpers === undefined) {\n        return;\n      }\n\n      helpersByRoot.set(root, helpers);\n      var current = root.current;\n      var alternate = current.alternate; // We need to determine whether this root has just (un)mounted.\n      // This logic is copy-pasted from similar logic in the DevTools backend.\n      // If this breaks with some refactoring, you'll want to update DevTools too.\n\n      if (alternate !== null) {\n        var wasMounted = alternate.memoizedState != null && alternate.memoizedState.element != null;\n        var isMounted = current.memoizedState != null && current.memoizedState.element != null;\n\n        if (!wasMounted && isMounted) {\n          // Mount a new root.\n          mountedRoots.add(root);\n          failedRoots.delete(root);\n        } else if (wasMounted && isMounted) {// Update an existing root.\n          // This doesn't affect our mounted root Set.\n        } else if (wasMounted && !isMounted) {\n          // Unmount an existing root.\n          mountedRoots.delete(root);\n\n          if (didError) {\n            // We'll remount it on future edits.\n            // Remember what was rendered so we can restore it.\n            failedRoots.set(root, alternate.memoizedState.element);\n          } else {\n            helpersByRoot.delete(root);\n          }\n        } else if (!wasMounted && !isMounted) {\n          if (didError && !failedRoots.has(root)) {\n            // The root had an error during the initial mount.\n            // We can't read its last element from the memoized state\n            // because there was no previously committed alternate.\n            // Ideally, it would be nice if we had a way to extract\n            // the last attempted rendered element, but accessing the update queue\n            // would tie this package too closely to the reconciler version.\n            // So instead, we just set a flag.\n            // TODO: Maybe we could fix this as the same time as when we fix\n            // DevTools to not depend on `alternate.memoizedState.element`.\n            didSomeRootFailOnMount = true;\n          }\n        }\n      } else {\n        // Mount a new root.\n        mountedRoots.add(root);\n      }\n\n      return oldOnCommitFiberRoot.apply(this, arguments);\n    };\n  }\n}\nfunction hasUnrecoverableErrors() {\n  return didSomeRootFailOnMount;\n} // Exposed for testing.\n\nfunction _getMountedRootCount() {\n  {\n    return mountedRoots.size;\n  }\n} // This is a wrapper over more primitive functions for setting signature.\n// Signatures let us decide whether the Hook order has changed on refresh.\n//\n// This function is intended to be used as a transform target, e.g.:\n// var _s = createSignatureFunctionForTransform()\n//\n// function Hello() {\n//   const [foo, setFoo] = useState(0);\n//   const value = useCustomHook();\n//   _s(); /* Second call triggers collecting the custom Hook list.\n//          * This doesn't happen during the module evaluation because we\n//          * don't want to change the module order with inline requires.\n//          * Next calls are noops. */\n//   return <h1>Hi</h1>;\n// }\n//\n// /* First call specifies the signature: */\n// _s(\n//   Hello,\n//   'useState{[foo, setFoo]}(0)',\n//   () => [useCustomHook], /* Lazy to avoid triggering inline requires */\n// );\n\nfunction createSignatureFunctionForTransform() {\n  {\n    // We'll fill in the signature in two steps.\n    // First, we'll know the signature itself. This happens outside the component.\n    // Then, we'll know the references to custom Hooks. This happens inside the component.\n    // After that, the returned function will be a fast path no-op.\n    var status = 'needsSignature';\n    var savedType;\n    var hasCustomHooks;\n    return function (type, key, forceReset, getCustomHooks) {\n      switch (status) {\n        case 'needsSignature':\n          if (type !== undefined) {\n            // If we received an argument, this is the initial registration call.\n            savedType = type;\n            hasCustomHooks = typeof getCustomHooks === 'function';\n            setSignature(type, key, forceReset, getCustomHooks); // The next call we expect is from inside a function, to fill in the custom Hooks.\n\n            status = 'needsCustomHooks';\n          }\n\n          break;\n\n        case 'needsCustomHooks':\n          if (hasCustomHooks) {\n            collectCustomHooksForSignature(savedType);\n          }\n\n          status = 'resolved';\n          break;\n\n        case 'resolved':\n          // Do nothing. Fast path for all future renders.\n          break;\n      }\n\n      return type;\n    };\n  }\n}\nfunction isLikelyComponentType(type) {\n  {\n    switch (typeof type) {\n      case 'function':\n        {\n          // First, deal with classes.\n          if (type.prototype != null) {\n            if (type.prototype.isReactComponent) {\n              // React class.\n              return true;\n            }\n\n            var ownNames = Object.getOwnPropertyNames(type.prototype);\n\n            if (ownNames.length > 1 || ownNames[0] !== 'constructor') {\n              // This looks like a class.\n              return false;\n            } // eslint-disable-next-line no-proto\n\n\n            if (type.prototype.__proto__ !== Object.prototype) {\n              // It has a superclass.\n              return false;\n            } // Pass through.\n            // This looks like a regular function with empty prototype.\n\n          } // For plain functions and arrows, use name as a heuristic.\n\n\n          var name = type.name || type.displayName;\n          return typeof name === 'string' && /^[A-Z]/.test(name);\n        }\n\n      case 'object':\n        {\n          if (type != null) {\n            switch (type.$$typeof) {\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_MEMO_TYPE:\n                // Definitely React components.\n                return true;\n\n              default:\n                return false;\n            }\n          }\n\n          return false;\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n  }\n}\n\nvar ReactFreshRuntime = Object.freeze({\n\tperformReactRefresh: performReactRefresh,\n\tregister: register,\n\tsetSignature: setSignature,\n\tcollectCustomHooksForSignature: collectCustomHooksForSignature,\n\tgetFamilyByID: getFamilyByID,\n\tgetFamilyByType: getFamilyByType,\n\tfindAffectedHostInstances: findAffectedHostInstances,\n\tinjectIntoGlobalHook: injectIntoGlobalHook,\n\thasUnrecoverableErrors: hasUnrecoverableErrors,\n\t_getMountedRootCount: _getMountedRootCount,\n\tcreateSignatureFunctionForTransform: createSignatureFunctionForTransform,\n\tisLikelyComponentType: isLikelyComponentType\n});\n\n// This is hacky but makes it work with both Rollup and Jest.\n\n\nvar runtime = ReactFreshRuntime.default || ReactFreshRuntime;\n\nmodule.exports = runtime;\n  })();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}